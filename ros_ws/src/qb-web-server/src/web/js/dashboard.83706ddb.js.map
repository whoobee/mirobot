{"version":3,"sources":["webpack:///./src/pages/Dashboard.vue?f06c","webpack:///src/pages/Dashboard.vue","webpack:///./src/pages/Dashboard.vue?3e09","webpack:///./src/pages/Dashboard.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","status_config","robot_con","en","attrs","robot_ws","state","on","$event","engageRosNode","_v","staticStyle","_e","slot","drive","status","_s","sensor","sensors","current_1","current","drive_1","current_2","drive_2","temp_1","temp","temp_2","message","debugTable","data","columns","maxMsgDisplaid","staticRenderFns","component"],"mappings":"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","file":"js/dashboard.83706ddb.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container\"},[(this.status_config.robot_con.en == true)?_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-lg-12\"},[_c('card',{attrs:{\"type\":\"chart\"}},[(this.robot_ws.state != 'engaged')?_c('base-button',{staticClass:\"animation-on-hover\",attrs:{\"block\":\"\",\"type\":\"danger\"},on:{\"click\":function($event){return _vm.engageRosNode()}}},[_c('i',{staticClass:\"tim-icons icon-bell-55 icon-spaceship\"}),_vm._v(\" Engage\\n        \")]):_c('base-button',{staticClass:\"animation-on-hover\",attrs:{\"block\":\"\",\"type\":\"info\"},on:{\"click\":function($event){return _vm.engageRosNode()}}},[_c('i',{staticClass:\"tim-icons icon-bell-55 icon-button-power\"}),_vm._v(\" Disengage\\n        \")]),_c('br'),_c('p',{staticClass:\"text-muted unselectable\",staticStyle:{\"font-size\":\"10px\"}},[_vm._v(\"(*) if websocket is up, this command will start/stop master ROS node\")])],1)],1)]):_vm._e(),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-lg-4\"},[_c('card',{staticStyle:{\"height\":\"150px\"},attrs:{\"type\":\"chart\"}},[_c('template',{slot:\"header\"},[_c('h4',{staticClass:\"unselectable\",staticStyle:{\"border-bottom\":\"1px solid gray\"}},[_c('i',{staticClass:\"tim-icons icon-bell-55 text-danger \"}),_vm._v(\" System Status\\n          \")])]),_c('div',{staticClass:\"copyright\"},[_c('ul',{staticClass:\"list-unstyled\"},[(this.status_config.drive.en)?_c('li',{staticClass:\"unselectable\",staticStyle:{\"padding\":\"5px\"}},[_vm._v(\"\\n              Drive status: \\n              \"),(this.status.drive == 'connected')?_c('span',{staticClass:\"text-success\"},[_vm._v(_vm._s(_vm.status.drive)+\"\\n              \")]):_c('span',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.status.drive)+\"\\n              \")])]):_vm._e(),(this.status_config.sensor.en)?_c('li',{staticClass:\"unselectable\",staticStyle:{\"padding\":\"5px\"}},[_vm._v(\"\\n              Sensors status: \\n              \"),(this.status.sensors == 'connected')?_c('span',{staticClass:\"text-success\"},[_vm._v(_vm._s(_vm.status.sensors)+\"\\n              \")]):_c('span',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.status.sensors)+\"\\n              \")])]):_vm._e()])])],2)],1),_c('div',{staticClass:\"col-lg-4\"},[_c('card',{staticStyle:{\"height\":\"150px\"},attrs:{\"type\":\"chart\"}},[_c('template',{slot:\"header\"},[_c('h4',{staticClass:\"unselectable\",staticStyle:{\"border-bottom\":\"1px solid gray\"}},[_c('i',{staticClass:\"tim-icons icon-sound-wave text-info \"}),_vm._v(\" Current\\n          \")])]),_c('div',{staticClass:\"copyright\"},[_c('ul',{staticClass:\"list-unstyled\"},[(this.status_config.current_1.en)?_c('li',{staticClass:\"unselectable\",staticStyle:{\"padding\":\"5px\"}},[_vm._v(\"\\n              Drive#1 Current: \\n              \"),(this.current.drive_1 > 800)?_c('span',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.current.drive_1)+\" \"),_c('small',[_vm._v(\"m\")]),_vm._v(\"A\\n              \")]):_c('span',{staticClass:\"text-success\"},[_vm._v(_vm._s(_vm.current.drive_1)+\" \"),_c('small',[_vm._v(\"m\")]),_vm._v(\"A\\n              \")])]):_vm._e(),(this.status_config.current_2.en)?_c('li',{staticClass:\"unselectable\",staticStyle:{\"padding\":\"5px\"}},[_vm._v(\"\\n              Drive#2 Current: \\n              \"),(this.current.drive_1 > 800)?_c('span',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.current.drive_2)+\" \"),_c('small',[_vm._v(\"m\")]),_vm._v(\"A\\n              \")]):_c('span',{staticClass:\"text-success\"},[_vm._v(_vm._s(_vm.current.drive_2)+\" \"),_c('small',[_vm._v(\"m\")]),_vm._v(\"A\\n              \")])]):_vm._e()])])],2)],1),_c('div',{staticClass:\"col-lg-4\"},[_c('card',{staticStyle:{\"height\":\"150px\"},attrs:{\"type\":\"chart\"}},[_c('template',{slot:\"header\"},[_c('h4',{staticClass:\"unselectable\",staticStyle:{\"border-bottom\":\"1px solid gray\"}},[_c('i',{staticClass:\"tim-icons icon-alert-circle-exc text-success \"}),_vm._v(\" Temperature\\n          \")])]),_c('div',{staticClass:\"copyright\"},[_c('ul',{staticClass:\"list-unstyled\"},[(this.status_config.temp_1.en)?_c('li',{staticClass:\"unselectable\",staticStyle:{\"padding\":\"5px\"}},[_vm._v(\"\\n              Drive#1 Temp: \\n              \"),(this.temp.drive_1 > 80)?_c('span',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.temp.drive_1)+\" °C\\n              \")]):_c('span',{staticClass:\"text-success\"},[_vm._v(_vm._s(_vm.temp.drive_1)+\" °C\\n              \")])]):_vm._e(),(this.status_config.temp_2.en)?_c('li',{staticClass:\"unselectable\",staticStyle:{\"padding\":\"5px\"}},[_vm._v(\"\\n              Drive#2 Temp: \\n              \"),(this.temp.drive_2 > 80)?_c('span',{staticClass:\"text-danger\"},[_vm._v(_vm._s(_vm.temp.drive_2)+\" °C\\n              \")]):_c('span',{staticClass:\"text-success\"},[_vm._v(_vm._s(_vm.temp.drive_2)+\" °C\\n              \")])]):_vm._e()])])],2)],1)]),_c('div',{staticClass:\"row\"},[_c('div',{staticClass:\"col-md-12\"},[(this.status_config.message.en)?_c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"card-header mb-5\"},[_c('h5',{staticClass:\"card-category unselectable\"},[_vm._v(\"Messages\")]),_c('div',{staticClass:\"table-full-width table-responsive col-12\",staticStyle:{\"height\":\"400px\"}},[_c('base-table',{staticStyle:{\"font-size\":\"12px\"},attrs:{\"data\":_vm.debugTable.data,\"columns\":_vm.debugTable.columns,\"thead-classes\":\"text-primary\"}})],1),_c('br'),_c('p',{staticClass:\"text-muted unselectable\",staticStyle:{\"font-size\":\"10px\"}},[_vm._v(\"(*) max messages displaied ( \"+_vm._s(_vm.debugTable.maxMsgDisplaid)+\" )\")])])]):_vm._e()])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"container\">\n\n    <div v-if=\"this.status_config.robot_con.en == true\" class=\"row\">\n      <div class=\"col-lg-12\">\n        <card type=\"chart\">\n          <base-button \n              v-if=\"this.robot_ws.state != 'engaged'\"\n              block  \n              class=\"animation-on-hover\" type=\"danger\"\n              v-on:click='engageRosNode()'>\n            <i class=\"tim-icons icon-bell-55 icon-spaceship\"></i> Engage\n          </base-button>\n          <base-button \n              v-else\n              block  \n              class=\"animation-on-hover\" type=\"info\"\n              v-on:click='engageRosNode()'>\n            <i class=\"tim-icons icon-bell-55 icon-button-power\"></i> Disengage\n          </base-button>\n          <br>\n          <p class=\"text-muted unselectable\" style=\"font-size:10px\">(*) if websocket is up, this command will start/stop master ROS node</p>\n        </card>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-lg-4\">\n        <card type=\"chart\" style=\"height: 150px\">\n          <template slot=\"header\">\n            <h4 class=\"unselectable\" style=\"border-bottom: 1px solid gray\">\n              <i class=\"tim-icons icon-bell-55 text-danger \"></i> System Status\n            </h4>\n          </template>\n          <div class=\"copyright\">\n            <ul class=\"list-unstyled\">\n              <li class=\"unselectable\" style=\"padding:5px\" v-if=\"this.status_config.drive.en\">\n                Drive status: \n                <span \n                    v-if=\"this.status.drive == 'connected'\" \n                    class=\"text-success\">{{status.drive}}\n                </span>\n                <span \n                    v-else \n                    class=\"text-danger\">{{status.drive}}\n                </span>\n              </li>\n              <li class=\"unselectable\" style=\"padding:5px\" v-if=\"this.status_config.sensor.en\">\n                Sensors status: \n                <span \n                    v-if=\"this.status.sensors == 'connected'\" \n                    class=\"text-success\">{{status.sensors}}\n                </span>\n                <span \n                    v-else \n                    class=\"text-danger\">{{status.sensors}}\n                </span>\n              </li>\n            </ul>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-4\">\n        <card type=\"chart\" style=\"height: 150px\">\n          <template slot=\"header\">\n            <h4 class=\"unselectable\" style=\"border-bottom: 1px solid gray\">\n              <i class=\"tim-icons icon-sound-wave text-info \"></i> Current\n            </h4>\n          </template>\n          <div class=\"copyright\">\n            <ul class=\"list-unstyled\">\n              <li class=\"unselectable\" style=\"padding: 5px\" v-if=\"this.status_config.current_1.en\">\n                Drive#1 Current: \n                <span \n                    v-if=\"this.current.drive_1 > 800\" \n                    class=\"text-danger\">{{current.drive_1}} <small>m</small>A\n                </span>\n                <span \n                    v-else\n                    class=\"text-success\">{{current.drive_1}} <small>m</small>A\n                </span>\n              </li>\n              <li class=\"unselectable\" style=\"padding: 5px\" v-if=\"this.status_config.current_2.en\">\n                Drive#2 Current: \n                <span \n                    v-if=\"this.current.drive_1 > 800\" \n                    class=\"text-danger\">{{current.drive_2}} <small>m</small>A\n                </span>\n                <span \n                    v-else \n                    class=\"text-success\">{{current.drive_2}} <small>m</small>A\n                </span>\n              </li>\n            </ul>\n          </div>\n        </card>\n      </div>\n      <div class=\"col-lg-4\">\n        <card type=\"chart\" style=\"height: 150px\">\n          <template slot=\"header\">\n            <h4 class=\"unselectable\" style=\"border-bottom: 1px solid gray\">\n              <i class=\"tim-icons icon-alert-circle-exc text-success \"></i> Temperature\n            </h4>\n          </template>\n          <div class=\"copyright\">\n            <ul class=\"list-unstyled\">\n              <li class=\"unselectable\" style=\"padding: 5px\" v-if=\"this.status_config.temp_1.en\">\n                Drive#1 Temp: \n                <span \n                    v-if=\"this.temp.drive_1 > 80\" \n                    class=\"text-danger\">{{temp.drive_1}} °C\n                </span>\n                <span \n                    v-else\n                    class=\"text-success\">{{temp.drive_1}} °C\n                </span>\n              </li>\n              <li class=\"unselectable\" style=\"padding: 5px\" v-if=\"this.status_config.temp_2.en\">\n                Drive#2 Temp: \n                <span \n                    v-if=\"this.temp.drive_2 > 80\" \n                    class=\"text-danger\">{{temp.drive_2}} °C\n                </span>\n                <span \n                    v-else\n                    class=\"text-success\">{{temp.drive_2}} °C\n                </span>\n              </li>\n            </ul>\n          </div>\n        </card>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"card\" v-if=\"this.status_config.message.en\">\n          <div class=\"card-header mb-5\">\n            <h5 class=\"card-category unselectable\">Messages</h5>\n            <div class=\"table-full-width table-responsive col-12\" style=\"height: 400px\">\n              <base-table :data=\"debugTable.data\"\n                          :columns=\"debugTable.columns\"\n                          thead-classes=\"text-primary\" style=\"font-size: 12px\">\n              </base-table>\n            </div>\n            <br>\n            <p class=\"text-muted unselectable\" style=\"font-size:10px\">(*) max messages displaied ( {{debugTable.maxMsgDisplaid}} )</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\n  /* Event Bus */\n  import {bus} from '../main.js'\n  /* Alert component */\n  import { BaseAlert } from '@/components';\n  /* Table component */\n  import { BaseTable } from \"@/components\";\n\n  Number.prototype.pad = function(size) {\n      var s = String(this);\n      while (s.length < (size || 2)) {s = \"0\" + s;}\n      return s;\n  }\n\n  export default {\n    components: {\n      BaseTable,\n    },\n    computed: {\n      /* computed for getting general state */\n      current_state() {\n        return this.$store.getters.getStatus;\n      },\n    },\n    data() {\n      return {\n        status_config: {\n          poll_rate: 2000,\n          robot_con: {\n            en: true,\n            address: \"ws://192.168.0.45\",\n            port: \"8090\",\n          },\n          message: {\n            topic: \"/rosout\",\n            msg: \"rosgraph_msgs/Log\",\n            en: true,\n          },\n          drive: {\n            topic: \"/odrive/status\",\n            msg: \"std_msgs/String\",\n            en: true,\n          },\n          sensor: {\n            topic: \"/camera/realsense2_camera_manager/bond\",\n            msg: \"bond/Status\",\n            en: true,\n          },\n          current_1: {\n            topic: \"/odrive/left/current\",\n            msg: \"std_msgs/Float64\",\n            en: true,\n          },\n          current_2: {\n            topic: \"/odrive/right/current\",\n            msg: \"std_msgs/Float64\",\n            en: true,\n          },\n          temp_1: {\n            topic: \"/odrive/left/temperature\",\n            msg: \"std_msgs/Float64\",\n            en: true,\n          },\n          temp_2: {\n            topic: \"/odrive/right/temperature\",\n            msg: \"std_msgs/Float64\",\n            en: true,\n          },\n        },\n        robot_ws: {\n          state: \"disconnected\",\n          socket: null,\n        },\n        status: {\n          drive: \"n/c\",\n          sensors: \"n/c\",\n        },\n        current: {\n          drive_1: 0,\n          drive_2: 0\n        },\n        temp: {\n          drive_1: 0,\n          drive_2: 0\n        },\n        /* data structure for debug table */\n        debugTable: {\n          title: \"/rosout\",\n          columns: [\"Timestamp\", \"Name\", \"Message\"],\n          data: [],\n          maxMsgDisplaid : 500\n        },\n        messages_topic: null,\n        drive_status_topic: null,\n        current_1_topic: null,\n        current_2_topic: null,\n        temp_1_topic: null,\n        temp_2_topic: null,\n        sensors_topic: null,\n        /* data structure for debug table */\n        debugTable: {\n          title: \"/rosout\",\n          columns: [\"Timestamp\", \"Name\", \"Message\"],\n          data: [],\n          maxMsgDisplaid : 500\n        },\n      }\n    },\n    methods: {\n      /* Config component */\n      configure: function(){\n        if(this.$cookies.isKey('configuration_data')){\n          this.status_config.robot_con.en = this.$cookies.get('configuration_data').status_config.robot_con.en;\n          this.status_config.robot_con.address = this.$cookies.get('configuration_data').status_config.robot_con.address;\n          this.status_config.robot_con.port = this.$cookies.get('configuration_data').status_config.robot_con.port;\n          this.status_config.poll_rate = this.$cookies.get('configuration_data').status_config.poll_rate;\n          this.status_config.message.topic = this.$cookies.get('configuration_data').status_config.message.topic;\n          this.status_config.message.msg = this.$cookies.get('configuration_data').status_config.message.msg;\n          this.status_config.message.en = this.$cookies.get('configuration_data').status_config.message.en;\n          this.status_config.drive.topic = this.$cookies.get('configuration_data').status_config.drive.topic;\n          this.status_config.drive.msg = this.$cookies.get('configuration_data').status_config.drive.msg;\n          this.status_config.drive.en = this.$cookies.get('configuration_data').status_config.drive.en;\n          this.status_config.sensor.topic = this.$cookies.get('configuration_data').status_config.sensor.topic;\n          this.status_config.sensor.msg = this.$cookies.get('configuration_data').status_config.sensor.msg;\n          this.status_config.sensor.en = this.$cookies.get('configuration_data').status_config.sensor.en;\n          this.status_config.current_1.topic = this.$cookies.get('configuration_data').status_config.current_1.topic;\n          this.status_config.current_1.msg = this.$cookies.get('configuration_data').status_config.current_1.msg;\n          this.status_config.current_1.en = this.$cookies.get('configuration_data').status_config.current_1.en;\n          this.status_config.current_2.topic = this.$cookies.get('configuration_data').status_config.current_2.topic;\n          this.status_config.current_2.msg = this.$cookies.get('configuration_data').status_config.current_2.msg;\n          this.status_config.current_2.en = this.$cookies.get('configuration_data').status_config.current_2.en;\n          this.status_config.temp_1.topic = this.$cookies.get('configuration_data').status_config.temp_1.topic;\n          this.status_config.temp_1.msg = this.$cookies.get('configuration_data').status_config.temp_1.msg;\n          this.status_config.temp_1.en = this.$cookies.get('configuration_data').status_config.temp_1.en;\n          this.status_config.temp_2.topic = this.$cookies.get('configuration_data').status_config.temp_2.topic;\n          this.status_config.temp_2.msg = this.$cookies.get('configuration_data').status_config.temp_2.msg;\n          this.status_config.temp_2.en = this.$cookies.get('configuration_data').status_config.temp_2.en;\n        }\n        else{\n          this.status_config.robot_con.en = true;\n          this.status_config.robot_con.address = \"ws://192.168.0.45\";\n          this.status_config.robot_con.port = 8090;\n          this.status_config.poll_rate = 2000;\n          this.status_config.message.topic = \"/rosout\";\n          this.status_config.message.msg = \"rosgraph_msgs/Log\";\n          this.status_config.message.en = true;\n          this.status_config.drive.topic = \"/odrive/status\";\n          this.status_config.drive.msg = \"std_msgs/String\";\n          this.status_config.drive.en = true;\n          this.status_config.sensor.topic = \"/camera/realsense2_camera_manager/bond\";\n          this.status_config.sensor.msg = \"bond/Status\";\n          this.status_config.sensor.en = true;\n          this.status_config.current_1.topic = \"/odrive/left/current\";\n          this.status_config.current_1.msg = \"std_msgs/Float64\";\n          this.status_config.current_1.en = true;\n          this.status_config.current_2.topic = \"/odrive/right/current\";\n          this.status_config.current_2.msg = \"std_msgs/Float64\";\n          this.status_config.current_2.en = true;\n          this.status_config.temp_1.topic = \"/odrive/left/temperature\";\n          this.status_config.temp_1.msg = \"std_msgs/Float64\";\n          this.status_config.temp_1.en = true;\n          this.status_config.temp_2.topic = \"/odrive/right/temperature\";\n          this.status_config.temp_2.msg = \"std_msgs/Float64\";\n          this.status_config.temp_2.en = true;\n          this.notifyVue(\"danger\" , \n            \"Configuration not found.\", \n            \"Configuration cookie was not found. Loading default default settings.\",);\n        }\n      },\n      /* Initialize component */\n      init: function(){\n        console.log(\"Dash-init\");\n        if(this.status_config.message.en == true) {\n          this.messages_topic = new ROSLIB.Topic({\n            ros : this.current_state.ros_con,\n            name : this.status_config.message.topic,\n            messageType :this.status_config.message.msg\n          });\n          this.messages_topic.subscribe(this.updateDebugTableData);\n        }\n        /* drive Status */\n        if(this.status_config.drive.en == true) {\n          this.drive_status_topic = new ROSLIB.Topic({\n            ros : this.current_state.ros_con,\n            name : this.status_config.drive.topic,\n            messageType : this.status_config.drive.msg,\n            throttle_rate : this.status_config.poll_rate,\n          });\n          this.drive_status_topic.subscribe(this.getDriveStatus);\n        }\n        /* drive L Wheel Current */\n        if(this.status_config.current_1.en == true) {\n          this.current_1_topic = new ROSLIB.Topic({\n            ros : this.current_state.ros_con,\n            name : this.status_config.current_1.topic,\n            messageType : this.status_config.current_1.msg,\n            throttle_rate : this.status_config.poll_rate,\n          });\n          this.current_1_topic.subscribe(this.getDrive1Current);\n          }\n        /* drive R Wheel Current */\n        if(this.status_config.current_2.en == true) {\n          this.current_2_topic = new ROSLIB.Topic({\n            ros : this.current_state.ros_con,\n            name : this.status_config.current_2.topic,\n            messageType : this.status_config.current_2.msg,\n            throttle_rate : this.status_config.poll_rate,\n          });\n          this.current_2_topic.subscribe(this.getDrive2Current);\n          }\n        /* drive L Wheel Temp */\n        if(this.status_config.temp_1.en == true) {\n          this.temp_1_topic = new ROSLIB.Topic({\n            ros : this.current_state.ros_con,\n            name : this.status_config.temp_1.topic,\n            messageType : this.status_config.temp_1.msg,\n            throttle_rate : this.status_config.poll_rate,\n          });\n          this.temp_1_topic.subscribe(this.getDrive1Temp);\n        }\n        /* drive R Wheel Temp */\n        if(this.status_config.temp_2.en == true) {\n          this.temp_2_topic = new ROSLIB.Topic({\n            ros : this.current_state.ros_con,\n            name : this.status_config.temp_2.topic,\n            messageType : this.status_config.temp_2.msg,\n            throttle_rate : this.status_config.poll_rate,\n          });\n          this.temp_2_topic.subscribe(this.getDrive2Temp);\n        }\n        /* sensors status */\n        if(this.status_config.sensor.en == true) {\n          this.sensors_topic = new ROSLIB.Topic({\n            ros : this.current_state.ros_con,\n            name : this.status_config.sensor.topic,\n            messageType : this.status_config.sensor.msg,\n            throttle_rate : this.status_config.poll_rate,\n          });\n          this.sensors_topic.subscribe(this.getSensorsData);\n        }\n        setTimeout(()=>this.stopStatusSubscribers(), 5000);\n      },\n      /* Deinitialize component */\n      deinit: function() {\n        this.unsubscribeTopics();\n      },\n      /* function for balloon notification */\n      notifyVue(type, title, message) {\n        this.$notify({\n          title: title,\n          message: message,\n          icon: \"tim-icons icon-alert-circle-exc\",\n          horizontalAlign: \"right\",\n          verticalAlign: \"bottom\",\n          type: type,\n          timeout: 5000\n        });\n      },\n      /* Start/Stop ROS master node */\n      engageRosNode: function() {\n        var payload = {\n          command: \"engage\",\n          arg: \"all\"\n        }\n        switch(this.robot_ws.state){\n          case \"disconnected\":\n          case \"connected\":\n          case \"disengaged\":\n            payload.command = \"engage\";\n            payload.arg = \"all\";\n            break;\n          case \"engaged\":\n            payload.command = \"disengage\";\n            payload.arg = \"all\";\n            break;\n          default:\n            payload.command = null;\n            payload.arg = null;\n            break;\n        }\n        console.log(\"Send msg: \" + JSON.stringify(payload));\n        this.robot_ws.socket.send(JSON.stringify(payload));\n      },\n      /* Status event from ROS master node */\n      getRosNodeState: function(event) {\n        console.log(\"Res msg: \" + event.data);\n        var response = JSON.parse(event.data);\n         switch(response.response){\n          case \"engaged\":\n            if(response.arg == \"all\")\n              this.robot_ws.state = \"engaged\";\n            break;\n          case \"disengaged\":\n            if(response.arg == \"all\")\n              this.robot_ws.state = \"disengaged\";\n            break;\n          default:\n            response.command = null;\n            response.arg = null;\n            break;\n         }\n      },\n      /* callback function for updating debug table */\n      updateDebugTableData: function(message){\n          var data = {id: 0, timestamp: 0, name: \"\", message: \"\"};\n          var t = new Date(1970, 0, 1); // Epoch\n          t.setSeconds(message.header.stamp.secs);\n          data.id = 0;\n          data.timestamp = t.getHours().pad(2)+\":\"+t.getMinutes().pad(2)+\":\"+t.getSeconds().pad(2)/*+\":\"+t.getMilliseconds().pad(3)+\"\"*/;\n          data.name = message.name;\n          data.message = message.msg;\n          this.debugTable.data.push(data);\n          if( this.debugTable.data.length > this.debugTable.maxMsgDisplaid){\n             this.debugTable.data.shift();\n          }\n      },\n      /* callback function for getting drive info */\n      getDriveStatus: function(message){\n        this.status.drive = message.data;\n      },\n      getDrive1Current: function(message){\n        this.current.drive_1 = (message.data * 1000).toFixed(2);\n      },\n      getDrive2Current: function(message){\n        this.current.drive_2 = (message.data * 1000).toFixed(2);\n      },\n      getDrive1Temp: function(message){\n        this.temp.drive_1 = message.data.toFixed(1);\n      },\n      getDrive2Temp: function(message){\n        this.temp.drive_2 = message.data.toFixed(1);\n      },\n      /* callback function for getting sensors info */\n      getSensorsData: function(message){\n          if(message.active)\n            this.status.sensors = \"connected\";\n          else\n            this.status.sensors = \"not connected\";\n      },\n      unsubscribeTopics: function(){\n        if(this.messages_topic != null && this.status_config.message.en == true)\n        {\n          this.messages_topic.unsubscribe();\n        }\n        if(this.drive_status_topic != null && this.status_config.drive.en == true)\n        {\n          this.drive_status_topic.unsubscribe();\n        }\n        if(this.current_1_topic != null && this.status_config.current_1.en == true)\n        {\n          this.current_1_topic.unsubscribe();\n        }\n        if(this.current_2_topic != null && this.status_config.current_2.en == true)\n        {\n          this.current_2_topic.unsubscribe();\n        }\n        if(this.temp_1_topic != null && this.status_config.temp_1.en == true)\n        {\n          this.temp_1_topic.unsubscribe();\n        }\n        if(this.temp_2_topic != null && this.status_config.temp_2.en == true)\n        {\n          this.temp_2_topic.unsubscribe();\n        }\n        if(this.sensors_topic != null && this.status_config.sensor.en == true)\n        {\n          this.sensors_topic.unsubscribe();\n        }\n      },\n      stopStatusSubscribers: function(){\n        if(this.messages_topic != null && this.status_config.message.en == true)\n        {\n          this.messages_topic.unsubscribe();\n        }\n        if(this.drive_status_topic != null && this.status_config.drive.en == true)\n        {\n          this.drive_status_topic.unsubscribe();\n        }\n        if(this.sensors_topic != null && this.status_config.temp_2.en == true)\n        {\n          this.sensors_topic.unsubscribe();\n        }\n      },\n      getTopicMsgType: function(type){\n        this.topic_msg_type = 'rosgraph_msgs/Log';\n      }\n    },\n    created() {\n      /* Read configuration */\n      this.configure();\n      /* Listen for connect event */\n      bus.$on('ros-connected', this.init);\n      /* Listen for disconnect event */\n      bus.$on('ros-disconnected', this.deinit);\n      /* Connect to system status websocket */\n      var robot_con_url = this.status_config.robot_con.address + \":\" + this.status_config.robot_con.port;\n      this.robot_ws.socket = new WebSocket(robot_con_url);\n      this.robot_ws.socket.onmessage = this.getRosNodeState;\n      this.robot_ws.socket.onopen = (event) => {\n        this.robot_ws.state = \"connected\";\n      }\n    },\n    mounted() {\n      if(this.current_state.status == false ){\n        this.notifyVue(\"danger\" , \n        \"Connection failure\", \n        \"Please make sure the connection with the robot is established...\",);\n      }\n      else{\n        this.init();\n      }\n    },\n    beforeDestroy() {\n      /* Deregister events */\n      bus.$off('ros-connected', this.init);\n      bus.$off('ros-disconnected', this.deinit);\n      this.deinit();\n    }\n  };\n</script>\n<style>\n</style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Dashboard.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Dashboard.vue?vue&type=template&id=c249916e&\"\nimport script from \"./Dashboard.vue?vue&type=script&lang=js&\"\nexport * from \"./Dashboard.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}